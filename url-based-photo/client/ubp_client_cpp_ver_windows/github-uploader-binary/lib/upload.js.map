{"version":3,"sources":["../src/upload.js"],"names":["getAbsoluteFulePaths","filePaths","cwd","process","map","filePath","resolve","upload","spinner","start","absoluteFilePaths","browser","launch","page","newPage","goto","type","click","waitForSelector","timeout","succeed","e","fail","exit","uploadElementHandle","$","uploadFile","waitFor","textareaValue","$eval","el","value","close"],"mappings":";;;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;;;AAEA,MAAMA,uBAAuBC,aAAa;AACxC,QAAMC,MAAMC,QAAQD,GAAR,EAAZ;AACA,SAAOD,UAAUG,GAAV,CAAcC,YAAY,eAAKC,OAAL,CAAaJ,GAAb,EAAkBG,QAAlB,CAA1B,CAAP;AACD,CAHD;;AAKA,MAAME;AAAA,6CAAS,WAAMN,SAAN,EAAmB;AAChC,UAAMO,UAAU,mBAAI,mBAAJ,EAAyBC,KAAzB,EAAhB;;AAEA,UAAMC,oBAAoBV,qBAAqBC,SAArB,CAA1B;;AAEA,UAAMU,UAAU,MAAM,oBAAUC,MAAV,EAAtB;AACA,UAAMC,OAAO,MAAMF,QAAQG,OAAR,EAAnB;;AAEA,UAAMD,KAAKE,IAAL,CAAU,0BAAV,CAAN;AACA,UAAMF,KAAKG,IAAL,CAAU,cAAV,EAA0B,YAA1B,CAAN;AACA,UAAMH,KAAKG,IAAL,CAAU,WAAV,EAAuB,UAAvB,CAAN,CAVgC,CAUU;AAC1C,UAAMH,KAAKI,KAAL,CAAW,sBAAX,CAAN;;AAEA,QAAI;AACF,YAAMJ,KAAKK,eAAL,CAAqB,gBAArB,EAAuC,EAAEC,SAAS,KAAX,EAAvC,CAAN;;AAEAX,cAAQY,OAAR,CAAgB,qBAAhB;AACAZ,cAAQC,KAAR,CAAc,0BAAd;AACD,KALD,CAKE,OAAOY,CAAP,EAAU;AACVb,cAAQc,IAAR,CAAa,eAAb;;AAEAnB,cAAQoB,IAAR,CAAa,CAAb;AACD;;AAED,UAAMV,KAAKE,IAAL,CAAU,yDAAV,CAAN;;AAEA,UAAMS,sBAAsB,MAAMX,KAAKY,CAAL,CAAO,yBAAP,CAAlC;;AAEA,UAAMD,oBAAoBE,UAApB,CAA+B,GAAGhB,iBAAlC,CAAN;AACA,UAAMG,KAAKc,OAAL,CAAa,IAAb,CAAN;;AAEA,QAAI;AACF,YAAMd,KAAKK,eAAL,CAAqB,gBAArB,EAAuC,EAAEC,SAAS,KAAX,EAAvC,CAAN;;AAEA,YAAMS,gBAAgB,MAAMf,KAAKgB,KAAL,CAC1B,qBAD0B,EAE1B;AAAA,eAAMC,GAAGC,KAAT;AAAA,OAF0B,CAA5B;;AAKA,YAAMlB,KAAKmB,KAAL,EAAN;;AAEAxB,cAAQY,OAAR,CAAgB,sBAAhB;AACA,aAAOQ,aAAP;AACD,KAZD,CAYE,OAAOP,CAAP,EAAU;AACVb,cAAQc,IAAR,CAAa,sBAAb;;AAEAnB,cAAQoB,IAAR,CAAa,CAAb;AACD;AACF,GAhDK;;AAAA;AAAA;AAAA;AAAA,IAAN;;kBAkDehB,M","file":"upload.js","sourcesContent":["import puppeteer from 'puppeteer';\nimport path from 'path';\nimport ora from 'ora';\n\nconst getAbsoluteFulePaths = filePaths => {\n  const cwd = process.cwd();\n  return filePaths.map(filePath => path.resolve(cwd, filePath));\n};\n\nconst upload = async filePaths => {\n  const spinner = ora('Start to login...').start();\n\n  const absoluteFilePaths = getAbsoluteFulePaths(filePaths);\n\n  const browser = await puppeteer.launch();\n  const page = await browser.newPage();\n\n  await page.goto('https://github.com/login');\n  await page.type('#login_field', 'xxxhomey19');\n  await page.type('#password', 'abc12345'); // Please DO NOT change this password!!!!!!!\n  await page.click('input[type=\"submit\"]');\n\n  try {\n    await page.waitForSelector('body.logged-in', { timeout: 15000 });\n\n    spinner.succeed('Login Successfully.');\n    spinner.start('Start to upload files...');\n  } catch (e) {\n    spinner.fail('Login failed.');\n\n    process.exit(0);\n  }\n\n  await page.goto('https://github.com/xxhomey19/github-uploader/issues/new');\n\n  const uploadElementHandle = await page.$('.js-manual-file-chooser');\n\n  await uploadElementHandle.uploadFile(...absoluteFilePaths);\n  await page.waitFor(1000);\n\n  try {\n    await page.waitForSelector('div.is-default', { timeout: 15000 });\n\n    const textareaValue = await page.$eval(\n      'textarea#issue_body',\n      el => el.value\n    );\n\n    await page.close();\n\n    spinner.succeed('Upload Successfully.');\n    return textareaValue;\n  } catch (e) {\n    spinner.fail('Upload files failed.');\n\n    process.exit(0);\n  }\n};\n\nexport default upload;\n"]}